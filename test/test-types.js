const describe = require('mocha').describe
const it = require('mocha').it
const expect = require('chai').expect

const types = require('../app/types')

describe('types', () => {
    describe('getEffectiveMapAgainst->normal', function() {
        it('Check effective map for normal', function () {
        var effectiveness = types.getEffectiveMapAgainst(["normal"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(2)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(0)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->fire', function() {
        it('Check effective map for fire', function () {
        var effectiveness = types.getEffectiveMapAgainst(["fire"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1/2)
        expect(effectiveness["water"]).to.equal(2)
        expect(effectiveness["grass"]).to.equal(1/2)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1/2)
        expect(effectiveness["fighting"]).to.equal(1)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(2)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1/2)
        expect(effectiveness["rock"]).to.equal(2)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1/2)
        expect(effectiveness["fairy"]).to.equal(1/2)
        })
    })
    describe('getEffectiveMapAgainst->water', function() {
        it('Check effective map for water', function () {
        var effectiveness = types.getEffectiveMapAgainst(["water"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1/2)
        expect(effectiveness["water"]).to.equal(1/2)
        expect(effectiveness["grass"]).to.equal(2)
        expect(effectiveness["electric"]).to.equal(2)
        expect(effectiveness["ice"]).to.equal(1/2)
        expect(effectiveness["fighting"]).to.equal(1)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1/2)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->grass', function() {
        it('Check effective map for grass', function () {
        var effectiveness = types.getEffectiveMapAgainst(["grass"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(2)
        expect(effectiveness["water"]).to.equal(1/2)
        expect(effectiveness["grass"]).to.equal(1/2)
        expect(effectiveness["electric"]).to.equal(1/2)
        expect(effectiveness["ice"]).to.equal(2)
        expect(effectiveness["fighting"]).to.equal(1)
        expect(effectiveness["poison"]).to.equal(2)
        expect(effectiveness["ground"]).to.equal(1/2)
        expect(effectiveness["flying"]).to.equal(2)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(2)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->electric', function() {
        it('Check effective map for electric', function () {
        var effectiveness = types.getEffectiveMapAgainst(["electric"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1/2)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(1)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(2)
        expect(effectiveness["flying"]).to.equal(1/2)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->ice', function() {
        it('Check effective map for ice', function () {
        var effectiveness = types.getEffectiveMapAgainst(["ice"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(2)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1/2)
        expect(effectiveness["fighting"]).to.equal(2)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(2)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(2)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->fighting', function() {
        it('Check effective map for fighting', function () {
        var effectiveness = types.getEffectiveMapAgainst(["fighting"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(1)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(2)
        expect(effectiveness["psychic"]).to.equal(2)
        expect(effectiveness["bug"]).to.equal(1/2)
        expect(effectiveness["rock"]).to.equal(1/2)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1/2)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(2)
        })
    })
    describe('getEffectiveMapAgainst->poison', function() {
        it('Check effective map for poison', function () {
        var effectiveness = types.getEffectiveMapAgainst(["poison"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1/2)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(1/2)
        expect(effectiveness["poison"]).to.equal(1/2)
        expect(effectiveness["ground"]).to.equal(2)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(2)
        expect(effectiveness["bug"]).to.equal(1/2)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1/2)
        })
    })
    describe('getEffectiveMapAgainst->ground', function() {
        it('Check effective map for ground', function () {
        var effectiveness = types.getEffectiveMapAgainst(["ground"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(2)
        expect(effectiveness["grass"]).to.equal(2)
        expect(effectiveness["electric"]).to.equal(0)
        expect(effectiveness["ice"]).to.equal(2)
        expect(effectiveness["fighting"]).to.equal(1)
        expect(effectiveness["poison"]).to.equal(1/2)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(1/2)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->flying', function() {
        it('Check effective map for flying', function () {
        var effectiveness = types.getEffectiveMapAgainst(["flying"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1/2)
        expect(effectiveness["electric"]).to.equal(2)
        expect(effectiveness["ice"]).to.equal(2)
        expect(effectiveness["fighting"]).to.equal(1/2)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(0)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1/2)
        expect(effectiveness["rock"]).to.equal(2)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->psychic', function() {
        it('Check effective map for psychic', function () {
        var effectiveness = types.getEffectiveMapAgainst(["psychic"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(1/2)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1/2)
        expect(effectiveness["bug"]).to.equal(2)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(2)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(2)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->bug', function() {
        it('Check effective map for bug', function () {
        var effectiveness = types.getEffectiveMapAgainst(["bug"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(2)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1/2)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(1/2)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1/2)
        expect(effectiveness["flying"]).to.equal(2)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(2)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->rock', function() {
        it('Check effective map for rock', function () {
        var effectiveness = types.getEffectiveMapAgainst(["rock"])
        expect(effectiveness["normal"]).to.equal(1/2)
        expect(effectiveness["fire"]).to.equal(1/2)
        expect(effectiveness["water"]).to.equal(2)
        expect(effectiveness["grass"]).to.equal(2)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(2)
        expect(effectiveness["poison"]).to.equal(1/2)
        expect(effectiveness["ground"]).to.equal(2)
        expect(effectiveness["flying"]).to.equal(1/2)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(2)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->ghost', function() {
        it('Check effective map for ghost', function () {
        var effectiveness = types.getEffectiveMapAgainst(["ghost"])
        expect(effectiveness["normal"]).to.equal(0)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(0)
        expect(effectiveness["poison"]).to.equal(1/2)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1/2)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(2)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(2)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->dragon', function() {
        it('Check effective map for dragon', function () {
        var effectiveness = types.getEffectiveMapAgainst(["dragon"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1/2)
        expect(effectiveness["water"]).to.equal(1/2)
        expect(effectiveness["grass"]).to.equal(1/2)
        expect(effectiveness["electric"]).to.equal(1/2)
        expect(effectiveness["ice"]).to.equal(2)
        expect(effectiveness["fighting"]).to.equal(1)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(2)
        expect(effectiveness["dark"]).to.equal(1)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(2)
        })
    })
    describe('getEffectiveMapAgainst->dark', function() {
        it('Check effective map for dark', function () {
        var effectiveness = types.getEffectiveMapAgainst(["dark"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(2)
        expect(effectiveness["poison"]).to.equal(1)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(0)
        expect(effectiveness["bug"]).to.equal(2)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1/2)
        expect(effectiveness["dragon"]).to.equal(1)
        expect(effectiveness["dark"]).to.equal(1/2)
        expect(effectiveness["steel"]).to.equal(1)
        expect(effectiveness["fairy"]).to.equal(2)
        })
    })
    describe('getEffectiveMapAgainst->steel', function() {
        it('Check effective map for steel', function () {
        var effectiveness = types.getEffectiveMapAgainst(["steel"])
        expect(effectiveness["normal"]).to.equal(1/2)
        expect(effectiveness["fire"]).to.equal(2)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1/2)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1/2)
        expect(effectiveness["fighting"]).to.equal(2)
        expect(effectiveness["poison"]).to.equal(0)
        expect(effectiveness["ground"]).to.equal(2)
        expect(effectiveness["flying"]).to.equal(1/2)
        expect(effectiveness["psychic"]).to.equal(1/2)
        expect(effectiveness["bug"]).to.equal(1/2)
        expect(effectiveness["rock"]).to.equal(1/2)
        expect(effectiveness["ghost"]).to.equal(1/2)
        expect(effectiveness["dragon"]).to.equal(1/2)
        expect(effectiveness["dark"]).to.equal(1/2)
        expect(effectiveness["steel"]).to.equal(1/2)
        expect(effectiveness["fairy"]).to.equal(1/2)
        })
    })
    describe('getEffectiveMapAgainst->fairy', function() {
        it('Check effective map for fairy', function () {
        var effectiveness = types.getEffectiveMapAgainst(["fairy"])
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(1/2)
        expect(effectiveness["poison"]).to.equal(2)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(1/2)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(0)
        expect(effectiveness["dark"]).to.equal(1/2)
        expect(effectiveness["steel"]).to.equal(2)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->fairy->pogo', function() {
        it('Check effective map for fairy with pogo multipliers', function () {
        var effectiveness = types.getEffectiveMapAgainst(["fairy"], true)
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(1)
        expect(effectiveness["water"]).to.equal(1)
        expect(effectiveness["grass"]).to.equal(1)
        expect(effectiveness["electric"]).to.equal(1)
        expect(effectiveness["ice"]).to.equal(1)
        expect(effectiveness["fighting"]).to.equal(5/8)
        expect(effectiveness["poison"]).to.equal(8/5)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(5/8)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(25/64)
        expect(effectiveness["dark"]).to.equal(5/8)
        expect(effectiveness["steel"]).to.equal(8/5)
        expect(effectiveness["fairy"]).to.equal(1)
        })
    })
    describe('getEffectiveMapAgainst->fairy,dragon->pogo', function() {
        it('Check effective map for fairy with pogo multipliers', function () {
        var effectiveness = types.getEffectiveMapAgainst(["fairy", "dragon"], true)
        expect(effectiveness["normal"]).to.equal(1)
        expect(effectiveness["fire"]).to.equal(5/8)
        expect(effectiveness["water"]).to.equal(5/8)
        expect(effectiveness["grass"]).to.equal(5/8)
        expect(effectiveness["electric"]).to.equal(5/8)
        expect(effectiveness["ice"]).to.equal(8/5)
        expect(effectiveness["fighting"]).to.equal(5/8)
        expect(effectiveness["poison"]).to.equal(8/5)
        expect(effectiveness["ground"]).to.equal(1)
        expect(effectiveness["flying"]).to.equal(1)
        expect(effectiveness["psychic"]).to.equal(1)
        expect(effectiveness["bug"]).to.equal(5/8)
        expect(effectiveness["rock"]).to.equal(1)
        expect(effectiveness["ghost"]).to.equal(1)
        expect(effectiveness["dragon"]).to.equal(5/8)
        expect(effectiveness["dark"]).to.equal(5/8)
        expect(effectiveness["steel"]).to.equal(8/5)
        expect(effectiveness["fairy"]).to.equal(8/5)
        })
    })
    describe('getGoodCounterTypes', function() {
        it('Get good counters for fire/flying', function () {
        var counters = types.getGoodCounterTypes(["fire", "flying"])
        expect(counters).to.be.an('array')
        expect(counters).to.have.length(2)
        expect(counters[0]).to.deep.equal({multiplier: 4, types: ['rock']})
        expect(counters[1]).to.deep.equal({multiplier: 2, types: ['water', 'electric']})
        })
    })
    describe('getBadCounterTypes', function() {
        it('Get bad counters for fire/flying', function () {
        var counters = types.getBadCounterTypes(["fire", "flying"])
        expect(counters).to.be.an('array')
        expect(counters).to.have.length(3)
        expect(counters[0]).to.deep.equal({multiplier: 0, types: ['ground']})
        expect(counters[1]).to.deep.equal({multiplier: 1/4, types: ['grass', 'bug']})
        expect(counters[2]).to.deep.equal({multiplier: 1/2, types: ['fire', 'fighting', 'steel', 'fairy']})
        })
    })

})